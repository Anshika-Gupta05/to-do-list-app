{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\to-do list\\\\todo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from \"./logo.svg\";\n// import \"./App.css\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport imag from \"../src/images/Group 5.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [filterType, setFilterType] = useState(\"all\");\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n  const addTask = () => {\n    if (inputValue.trim() !== \"\") {\n      const newTask = {\n        text: inputValue,\n        completed: false\n      };\n      setTasks([...tasks, newTask]);\n      setInputValue(\"\");\n      localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n    } else {\n      alert(\"You must write a task!\");\n    }\n  };\n  const filterTasks = type => {\n    setFilterType(type);\n  };\n  const toggleTask = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n  };\n  const deleteTask = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n  };\n  const taskCount = tasks.filter(task => !task.completed).length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: [\"To-Do-List\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"input-box\",\n          placeholder: \"Add your text\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          className: \"input-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          className: \"add-task-button\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"list-container\",\n        className: \"task-list\",\n        children: tasks.filter(task => {\n          if (filterType === \"all\") return true;\n          if (filterType === \"pending\") return !task.completed;\n          if (filterType === \"completed\") return task.completed;\n        }).map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"task-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.completed,\n            onChange: () => toggleTask(index),\n            className: \"task-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => toggleTask(index),\n            style: {\n              textDecoration: task.completed ? \"line-through\" : \"none\"\n            },\n            className: \"task-text\",\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(index),\n            className: \"delete-button\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => filterTasks(\"all\"),\n          className: filterType === \"all\" ? \"active\" : \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => filterTasks(\"pending\"),\n          className: filterType === \"pending\" ? \"active\" : \"\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => filterTasks(\"completed\"),\n          className: filterType === \"completed\" ? \"active\" : \"\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"task-count\",\n        className: \"task-count\",\n        children: [\"Tasks Pending: \", taskCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iHi+n1KHrq45VQYDNw56iBFNvGY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","imag","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","inputValue","setInputValue","filterType","setFilterType","storedTasks","localStorage","getItem","JSON","parse","addTask","trim","newTask","text","completed","setItem","stringify","alert","filterTasks","type","toggleTask","index","updatedTasks","deleteTask","splice","taskCount","filter","task","length","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","value","onChange","e","target","onClick","map","checked","style","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/to-do list/todo-app/src/App.js"],"sourcesContent":["// import logo from \"./logo.svg\";\n// import \"./App.css\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport imag from \"../src/images/Group 5.png\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [filterType, setFilterType] = useState(\"all\");\n\n  useEffect(() => {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n\n  const addTask = () => {\n    if (inputValue.trim() !== \"\") {\n      const newTask = { text: inputValue, completed: false };\n      setTasks([...tasks, newTask]);\n      setInputValue(\"\");\n      localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n    } else {\n      alert(\"You must write a task!\");\n    }\n  };\n\n  const filterTasks = (type) => {\n    setFilterType(type);\n  };\n\n  const toggleTask = (index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n  };\n\n  const deleteTask = (index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n    localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n  };\n\n  const taskCount = tasks.filter((task) => !task.completed).length;\n\n  return (\n    <div className=\"container\">\n      <div className=\"todo-app\">\n        <h2 className=\"title\">\n          To-Do-List\n          <img src={imag} />\n        </h2>\n        <div className=\"row\">\n          <input\n            type=\"text\"\n            id=\"input-box\"\n            placeholder=\"Add your text\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            className=\"input-box\"\n          />\n          <button onClick={addTask} className=\"add-task-button\">\n            Add Task\n          </button>\n        </div>\n        <ul id=\"list-container\" className=\"task-list\">\n          {tasks\n            .filter((task) => {\n              if (filterType === \"all\") return true;\n              if (filterType === \"pending\") return !task.completed;\n              if (filterType === \"completed\") return task.completed;\n            })\n            .map((task, index) => (\n              <li key={index} className=\"task-item\">\n                <input\n                  type=\"checkbox\"\n                  checked={task.completed}\n                  onChange={() => toggleTask(index)}\n                  className=\"task-checkbox\"\n                />\n                <span\n                  onClick={() => toggleTask(index)}\n                  style={{\n                    textDecoration: task.completed ? \"line-through\" : \"none\",\n                  }}\n                  className=\"task-text\"\n                >\n                  {task.text}\n                </span>\n                <button\n                  onClick={() => deleteTask(index)}\n                  className=\"delete-button\"\n                >\n                  X\n                </button>\n              </li>\n            ))}\n        </ul>\n        <div className=\"filter-buttons\">\n          <button\n            onClick={() => filterTasks(\"all\")}\n            className={filterType === \"all\" ? \"active\" : \"\"}\n          >\n            All\n          </button>\n          <button\n            onClick={() => filterTasks(\"pending\")}\n            className={filterType === \"pending\" ? \"active\" : \"\"}\n          >\n            Pending\n          </button>\n          <button\n            onClick={() => filterTasks(\"completed\")}\n            className={filterType === \"completed\" ? \"active\" : \"\"}\n          >\n            Completed\n          </button>\n        </div>\n        <div id=\"task-count\" className=\"task-count\">\n          Tasks Pending: {taskCount}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}