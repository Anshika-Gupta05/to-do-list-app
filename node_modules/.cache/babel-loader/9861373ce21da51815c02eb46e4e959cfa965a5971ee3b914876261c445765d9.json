{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./style.css\";\n// import imag from \"../src/images/Group 5.png\";\n\n// function TodoApp() {\n//   const [tasks, setTasks] = useState([]);\n//   const [inputValue, setInputValue] = useState(\"\");\n//   const [filterType, setFilterType] = useState(\"all\");\n\n//   useEffect(() => {\n//     const storedTasks = localStorage.getItem(\"tasks\");\n//     if (storedTasks) {\n//       setTasks(JSON.parse(storedTasks));\n//     }\n//   }, []);\n\n//   const addTask = () => {\n//     if (inputValue.trim() !== \"\") {\n//       const newTask = { text: inputValue, completed: false };\n//       setTasks([...tasks, newTask]);\n//       setInputValue(\"\");\n//       localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n//     } else {\n//       alert(\"You must write a text!\");\n//     }\n//   };\n\n//   const filterTasks = (type) => {\n//     setFilterType(type);\n//   };\n\n//   const toggleTask = (index) => {\n//     const updatedTasks = [...tasks];\n//     updatedTasks[index].completed = !updatedTasks[index].completed;\n//     setTasks(updatedTasks);\n//     localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n//   };\n\n//   const deleteTask = (index) => {\n//     const updatedTasks = [...tasks];\n//     updatedTasks.splice(index, 1);\n//     setTasks(updatedTasks);\n//     localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n//   };\n\n//   const taskCount = tasks.filter((task) => !task.completed).length;\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"todo-app\">\n//         <h2 className=\"title\">\n//           To-Do-List\n//           <img src={imag} />\n//         </h2>\n//         <div className=\"row\">\n//           <input\n//             type=\"text\"\n//             id=\"input-box\"\n//             placeholder=\"Add your text\"\n//             value={inputValue}\n//             onChange={(e) => setInputValue(e.target.value)}\n//             className=\"input-box\"\n//           />\n//           <button onClick={addTask} className=\"add-task-button\">\n//             Add Task\n//           </button>\n//         </div>\n//         <ul id=\"list-container\" className=\"task-list\">\n//           {tasks\n//             .filter((task) => {\n//               if (filterType === \"all\") return true;\n//               if (filterType === \"pending\") return !task.completed;\n//               if (filterType === \"completed\") return task.completed;\n//             })\n//             .map((task, index) => (\n//               <li key={index} className=\"task-item\">\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={task.completed}\n//                   onChange={() => toggleTask(index)}\n//                   className=\"task-checkbox\"\n//                 />\n//                 <span\n//                   onClick={() => toggleTask(index)}\n//                   style={{\n//                     textDecoration: task.completed ? \"line-through\" : \"none\",\n//                   }}\n//                   className=\"task-text\"\n//                 >\n//                   {task.text}\n//                 </span>\n//                 <button\n//                   onClick={() => deleteTask(index)}\n//                   className=\"delete-button\"\n//                 >\n//                   X\n//                 </button>\n//               </li>\n//             ))}\n//         </ul>\n//         <div className=\"filter-buttons\">\n//           <button\n//             onClick={() => filterTasks(\"all\")}\n//             className={filterType === \"all\" ? \"active\" : \"\"}\n//           >\n//             All\n//           </button>\n//           <button\n//             onClick={() => filterTasks(\"pending\")}\n//             className={filterType === \"pending\" ? \"active\" : \"\"}\n//           >\n//             Pending\n//           </button>\n//           <button\n//             onClick={() => filterTasks(\"completed\")}\n//             className={filterType === \"completed\" ? \"active\" : \"\"}\n//           >\n//             Completed\n//           </button>\n//         </div>\n//         <div id=\"task-count\" className=\"task-count\">\n//           Tasks Pending: {taskCount}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// ReactDOM.render(<TodoApp />, document.getElementById(\"root\"));","map":{"version":3,"names":[],"sources":["C:/Users/Dell/OneDrive/Desktop/to-do list/todo-app/src/index.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./style.css\";\n// import imag from \"../src/images/Group 5.png\";\n\n// function TodoApp() {\n//   const [tasks, setTasks] = useState([]);\n//   const [inputValue, setInputValue] = useState(\"\");\n//   const [filterType, setFilterType] = useState(\"all\");\n\n//   useEffect(() => {\n//     const storedTasks = localStorage.getItem(\"tasks\");\n//     if (storedTasks) {\n//       setTasks(JSON.parse(storedTasks));\n//     }\n//   }, []);\n\n//   const addTask = () => {\n//     if (inputValue.trim() !== \"\") {\n//       const newTask = { text: inputValue, completed: false };\n//       setTasks([...tasks, newTask]);\n//       setInputValue(\"\");\n//       localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n//     } else {\n//       alert(\"You must write a text!\");\n//     }\n//   };\n\n//   const filterTasks = (type) => {\n//     setFilterType(type);\n//   };\n\n//   const toggleTask = (index) => {\n//     const updatedTasks = [...tasks];\n//     updatedTasks[index].completed = !updatedTasks[index].completed;\n//     setTasks(updatedTasks);\n//     localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n//   };\n\n//   const deleteTask = (index) => {\n//     const updatedTasks = [...tasks];\n//     updatedTasks.splice(index, 1);\n//     setTasks(updatedTasks);\n//     localStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n//   };\n\n//   const taskCount = tasks.filter((task) => !task.completed).length;\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"todo-app\">\n//         <h2 className=\"title\">\n//           To-Do-List\n//           <img src={imag} />\n//         </h2>\n//         <div className=\"row\">\n//           <input\n//             type=\"text\"\n//             id=\"input-box\"\n//             placeholder=\"Add your text\"\n//             value={inputValue}\n//             onChange={(e) => setInputValue(e.target.value)}\n//             className=\"input-box\"\n//           />\n//           <button onClick={addTask} className=\"add-task-button\">\n//             Add Task\n//           </button>\n//         </div>\n//         <ul id=\"list-container\" className=\"task-list\">\n//           {tasks\n//             .filter((task) => {\n//               if (filterType === \"all\") return true;\n//               if (filterType === \"pending\") return !task.completed;\n//               if (filterType === \"completed\") return task.completed;\n//             })\n//             .map((task, index) => (\n//               <li key={index} className=\"task-item\">\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={task.completed}\n//                   onChange={() => toggleTask(index)}\n//                   className=\"task-checkbox\"\n//                 />\n//                 <span\n//                   onClick={() => toggleTask(index)}\n//                   style={{\n//                     textDecoration: task.completed ? \"line-through\" : \"none\",\n//                   }}\n//                   className=\"task-text\"\n//                 >\n//                   {task.text}\n//                 </span>\n//                 <button\n//                   onClick={() => deleteTask(index)}\n//                   className=\"delete-button\"\n//                 >\n//                   X\n//                 </button>\n//               </li>\n//             ))}\n//         </ul>\n//         <div className=\"filter-buttons\">\n//           <button\n//             onClick={() => filterTasks(\"all\")}\n//             className={filterType === \"all\" ? \"active\" : \"\"}\n//           >\n//             All\n//           </button>\n//           <button\n//             onClick={() => filterTasks(\"pending\")}\n//             className={filterType === \"pending\" ? \"active\" : \"\"}\n//           >\n//             Pending\n//           </button>\n//           <button\n//             onClick={() => filterTasks(\"completed\")}\n//             className={filterType === \"completed\" ? \"active\" : \"\"}\n//           >\n//             Completed\n//           </button>\n//         </div>\n//         <div id=\"task-count\" className=\"task-count\">\n//           Tasks Pending: {taskCount}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// ReactDOM.render(<TodoApp />, document.getElementById(\"root\"));\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}